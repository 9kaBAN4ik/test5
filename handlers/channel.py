from aiogram import Router, F
from aiogram.types import ChatMemberUpdated
from aiogram.filters import ChatMemberUpdatedFilter
from aiogram.enums import ChatMemberStatus
from database import get_admins
import logging
router = Router()

ADMIN_IDS = get_admins()  # –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –±–æ—Ç–∞


@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=True))
async def bot_added_to_chat(event: ChatMemberUpdated):
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {event}")
    if event.new_chat_member.status in [ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.MEMBER]:
        chat = event.chat
        chat_type = "–∫–∞–Ω–∞–ª" if chat.type == "channel" else "–≥—Ä—É–ø–ø–∞"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º
        for admin_id in ADMIN_IDS:
            await event.bot.send_message(
                admin_id,
                f"üì¢ –ë–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ {chat_type}: {chat.title} (@{chat.username if chat.username else '–±–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})"
            )

@router.my_chat_member()
async def bot_status_change(event: ChatMemberUpdated):
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {event}")
    # –í—ã–≤–µ–¥–µ–º —Å—Ç–∞—Ä—ã–π –∏ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
    old_status = event.old_chat_member.status
    new_status = event.new_chat_member.status
    logging.info(f"–°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: {old_status}, –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {new_status}")

    # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ, –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å —É—Å–ª–æ–≤–∏–µ
    if new_status in ["member", "administrator"] and old_status != new_status:
        chat = event.chat
        chat_type = "–∫–∞–Ω–∞–ª" if chat.type == "channel" else "–≥—Ä—É–ø–ø–∞"
        for admin_id in ADMIN_IDS:
            await event.bot.send_message(
                admin_id,
                f"üì¢ –ë–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ {chat_type}: {chat.title} (@{chat.username if chat.username else '–±–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})"
            )